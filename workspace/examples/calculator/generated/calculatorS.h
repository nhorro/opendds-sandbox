// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p27
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:464

#ifndef _TAO_IDL_GENERATED_CALCULATORS_MWPIB3_H_
#define _TAO_IDL_GENERATED_CALCULATORS_MWPIB3_H_


#include "calculatorC.h"
#include "tao/PortableServer/Basic_SArguments.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/Fixed_Size_SArgument_T.h"
#include "tao/PortableServer/Var_Size_SArgument_T.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/UB_String_SArguments.h"
#include "tao/PortableServer/get_arg.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"
// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:66



TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:144

  

#if !defined (_EXAMPLE_CALCULATOR__SARG_TRAITS_)
#define _EXAMPLE_CALCULATOR__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Example::Calculator>
    : public
        Object_SArg_Traits_T<
            ::Example::Calculator_ptr,
            ::Example::Calculator_var,
            ::Example::Calculator_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_module/module_sh.cpp:37

namespace POA_Example
{
  

  
  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_sh.cpp:75

  

  class Calculator;
  typedef Calculator *Calculator_ptr;

  class  Calculator
    : public virtual PortableServer::ServantBase
  {
  protected:
    Calculator (void);
  
  public:
    /// Useful for template programming.
    typedef ::Example::Calculator _stub_type;
    typedef ::Example::Calculator_ptr _stub_ptr_type;
    typedef ::Example::Calculator_var _stub_var_type;

    Calculator (const Calculator& rhs);
    virtual ~Calculator (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::Example::Calculator *_this (void);
    
    virtual const char* _interface_repository_id (void) const;
    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:38

    virtual ::CORBA::Long add (
      ::CORBA::Long a,
      ::CORBA::Long b) = 0;

    static void add_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:38

    virtual ::CORBA::Long multiply (
      ::CORBA::Long a,
      ::CORBA::Long b) = 0;

    static void multiply_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };


// TAO_IDL - Generated from
// be/be_visitor_module/module_sh.cpp:68

} // module Example

#endif /* ifndef */

